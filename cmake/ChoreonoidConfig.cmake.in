# Use the following variables to compile and link against Choreonoid:
# CHOREONOID_FOUND               - True if Choreonoid was found on your system
# CHOREONOID_VERSION_STRING      - A human-readable string containing the version
# CHOREONOID_VERSION_MAJOR       - The major version of Choreonoid
# CHOREONOID_VERSION_MINOR       - The minor version of Choreonoid
# CHOREONOID_VERSION_PATCH       - The patch version of Choreonoid
# CHOREONOID_ROOT_DIR            - The base directory of Choreonoid
# CHOREONOID_CXX_STANDARD        - The c++ standard version used to build Choreonoid (11, 14, or 17)
# CHOREONOID_COMPILE_DEFINITIONS - Definitions needed to build with Choreonoid
# CHOREONOID_INCLUDE_DIRS        - List of directories of Choreonoid and it's dependencies
# CHOREONOID_LIBRARY_DIRS        - List of directories of Choreonoid and it's dependencies
# CHOREONOID_UTIL_LIBRARIES      - List of libraries to use the CnoidUtil libary
# CHOREONOID_BASE_LIBRARIES      - List of libraries to use the CnoidBase libary
# CHOREONOID_BODY_LIBRARIES      - List of libraries to use the CnoidBody libary
# CHOREONOID_BODY_PLUGIN_LIBRARIES - List of libraries to use the CnoidBody libary
# CHOREONOID_DISABLE_QT_SETUP    - Set true in advance to disable the Qt library setup
#
# Set the following variables to change the behaviour of the functions provided by this module
# CHOREONOID_INSTALL_SDK      - Set on if you want to install SDK files

set(CHOREONOID_ROOT_DIR @CMAKE_INSTALL_PREFIX@)

if(NOT CMAKE_VERSION VERSION_LESS 3.7.0)
  if(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)
    set(CMAKE_INSTALL_PREFIX "@CMAKE_INSTALL_PREFIX@" CACHE PATH "Install path prefix, prepended onto install directories." FORCE)
  endif()
endif()

set(CHOREONOID_VERSION_STRING @CHOREONOID_VERSION_STRING@)
set(CHOREONOID_VERSION_MAJOR @CHOREONOID_VERSION_MAJOR@)
set(CHOREONOID_VERSION_MINOR @CHOREONOID_VERSION_MINOR@)
set(CHOREONOID_VERSION_PATCH @CHOREONOID_VERSION_PATCH@)

set(CHOREONOID_VERSION_SUBDIR @CHOREONOID_VERSION_SUBDIR@)
set(CHOREONOID_BIN_SUBDIR @CHOREONOID_BIN_SUBDIR@)
set(CHOREONOID_BIN_DIR "@CMAKE_INSTALL_PREFIX@/@CHOREONOID_BIN_SUBDIR@")
set(CHOREONOID_LIB_SUBDIR @CHOREONOID_LIB_SUBDIR@)
set(CHOREONOID_LIB_DIR "@CMAKE_INSTALL_PREFIX@/@CHOREONOID_LIB_SUBDIR@")
set(CHOREONOID_PLUGIN_SUBDIR @CHOREONOID_PLUGIN_SUBDIR@)
set(CHOREONOID_PLUGIN_DIR "@CMAKE_INSTALL_PREFIX@/@CHOREONOID_PLUGIN_SUBDIR@")
set(CHOREONOID_HEADER_SUBDIR @CHOREONOID_HEADER_SUBDIR@)
set(CHOREONOID_SHARE_SUBDIR @CHOREONOID_SHARE_SUBDIR@)
set(CHOREONOID_SHARE_DIR "@CMAKE_INSTALL_PREFIX@/@CHOREONOID_SHARE_DIR@")
set(CHOREONOID_CMAKE_CONFIG_SUBDIR "@CHOREONOID_CMAKE_CONFIG_SUBDIR@")
set(CHOREONOID_ENABLE_INSTALL_RPATH @CHOREONOID_ENABLE_INSTALL_RPATH@)

set(CHOREONOID_CXX_STANDARD "@CMAKE_CXX_STANDARD@")
set(CHOREONOID_COMPILE_DEFINITIONS "@compile_definitions@")
set(CHOREONOID_DEFAULT_FVISIBILITY_HIDDEN @CHOREONOID_DEFAULT_FVISIBILITY_HIDDEN@)
set(CHOREONOID_INCLUDE_DIRS "@include_dirs@")
set(CHOREONOID_LIBRARY_DIRS "@library_dirs@")

set(CHOREONOID_ENABLE_GETTEXT @ENABLE_GETTEXT@)

set(CHOREONOID_UTIL_LIBRARIES CnoidUtil fmt "@PNG_LIBRARIES@" "@JPEG_LIBRARIES@")
if(UNIX)
  list(APPEND CHOREONOID_UTIL_LIBRARIES "@Boost_SYSTEM_LIBRARY@" "@Boost_FILESYSTEM_LIBRARY@")
elseif(MSVC)
  list(APPEND CHOREONOID_UTIL_LIBRARIES "@GETTEXT_LIBRARIES@")
  if(CHOREONOID_ENABLE_GETTEXT)
    list(APPEND CHOREONOID_UTIL_LIBRARIES "@GETTEXT_LIBRARIES@")
  endif()
endif()

set(CHOREONOID_BASE_LIBRARIES CnoidBase ${CHOREONOID_UTIL_LIBRARIES})
set(CHOREONOID_BODY_LIBRARIES CnoidBody ${CHOREONOID_UTIL_LIBRARIES})

if(CHOREONOID_ENABLE_GETTEXT)
  set(CHOREONOID_GETTEXT_MSGFMT_EXECUTABLE "@CHOREONOID_GETTEXT_MSGFMT_EXECUTABLE@")
endif()

include(${CMAKE_CURRENT_LIST_DIR}/ChoreonoidFindQt.cmake)
if(NOT CHOREONOID_SKIP_QT_CONFIG)
  choreonoid_find_qt_package(Core Gui Widgets Network)
  set(CMAKE_AUTOMOC OFF)
  list(APPEND CHOREONOID_COMPILE_DEFINITIONS ${CHOREONOID_QT_COMPILE_DEFINITIONS})
  list(APPEND CHOREONOID_BASE_LIBRARIES ${CHOREONOID_QT_LIBRARIES})
endif()

set(CHOREONOID_BODY_PLUGIN_LIBRARIES CnoidBodyPlugin CnoidBody ${CHOREONOID_BASE_LIBRARIES})

include(${CMAKE_CURRENT_LIST_DIR}/ChoreonoidBasicBuildFunctions.cmake)

set(CHOREONOID_ENABLE_PYTHON @ENABLE_PYTHON@)
if(CHOREONOID_ENABLE_PYTHON)
  set(CHOREONOID_PYTHON_UTIL_LIBRARIES CnoidPyUtil ${PYTHON_LIBRARIES})
  set(CHOREONOID_PYTHON_LIBRARIES CnoidPyBase ${CHOREONOID_PYTHON_UTIL_LIBRARIES})
  set(CHOREONOID_PYTHON_SUBDIR "@CNOID_PYTHON_SUBDIR@")
  set(CHOREONOID_USE_PYBIND11 @USE_PYBIND11@) # This variable is kept for backward compatibility
  include(${CMAKE_CURRENT_LIST_DIR}/ChoreonoidPythonBuildFunctions.cmake)
endif()

set(CHOREONOID_ENABLE_CORBA @is_corba_enabled@)
if(CHOREONOID_ENABLE_CORBA)
  set(CHOREONOID_OMNIORB_DIR "@CHOREONOID_OMNIORB_DIR@")
  set(CHOREONOID_OMNIORB_BINARY_DIR "@CHOREONOID_OMNIORB_BINARY_DIR@")
  set(CHOREONOID_CORBA_LIBRARIES CnoidCorba "@CHOREONOID_OMNIORB_LIBRARIES@")
  set(CHOREONOID_CORBA_PLUGIN_LIBRARIES CnoidCorbaPlugin ${CHOREONOID_CORBA_LIBRARIES})
  include(${CMAKE_CURRENT_LIST_DIR}/ChoreonoidCorbaBuildFunctions.cmake)
endif()

file(GLOB extmodules LIST_DIRECTORIES false "${CMAKE_CURRENT_LIST_DIR}/ext/*.cmake")
foreach(module ${extmodules})
  include(${module})
endforeach()
